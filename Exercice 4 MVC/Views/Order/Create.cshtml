@using Exercice_5_MVC.ViewModels
@using static BO.Enums
@model Exercice_5_MVC.ViewModels.OrderViewModel

@{
	ViewData["Title"] = "Create";
	var orderDetails = ViewData["OrderDetails"] as List<OrderDetailViewModel>;
	var articles = ViewData["Articles"] as List<ArticleViewModel>;
	var articleNames = articles?.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }).ToList();
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<h1>Create</h1>

<h4>OrderViewModel</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			@* <div class="form-group">
				<label asp-for="Id" class="control-label"></label>
				<input asp-for="Id" class="form-control" />
				<span asp-validation-for="Id" class="text-danger"></span>
			</div> *@
			<div class="form-group">
				<label asp-for="CustomerName" class="control-label"></label>
				<input asp-for="CustomerName" class="form-control" maxlength="100" />
				<span asp-validation-for="CustomerName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Email" class="control-label"></label>
				<input asp-for="Email" class="form-control" />
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ShippingAddress" class="control-label"></label>
				<input asp-for="ShippingAddress" class="form-control" maxlength="200" />
				<span asp-validation-for="ShippingAddress" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="OrderDate" class="control-label"></label>
				<input asp-for="OrderDate" class="form-control" />
				<span asp-validation-for="OrderDate" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="OrderStatus" class="control-label"></label>
				<select asp-for="OrderStatus" asp-items="Html.GetEnumSelectList<OrderStatus>()" class="form-select">
					<option value="">Choose a status</option>
				</select>
				<span asp-validation-for="OrderStatus" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="WarehouseId" class="control-label"></label>
				<input asp-for="WarehouseId" class="form-control" />
				<span asp-validation-for="WarehouseId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="TotalAmount" class="control-label"></label>
				<input asp-for="TotalAmount" class="form-control" id="idTotalAmount" readonly />
				<span asp-validation-for="TotalAmount" class="text-danger"></span>
			</div>
			<div class="form-group" id="ListArticlesSelectedView">
				@{
					await Html.RenderPartialAsync("_ListeArticles", ViewData["ArticlesSelected"]);
				}
			</div>
			@{
				if (orderDetails != null && articles != null)
				{
					<div class="row">
						<label>Articles</label>
						<div class="col-md-9">
							<select asp-items="articleNames" class="form-select" id="ArticleSelected">
								<option value="">Choose a article</option>
							</select>
							<label class="control-label">Quantity</label>
							<input id="ArticleQteSelected" class="form-control" type="number" />
						</div>
						<div class="col-md-3">
							<button type="button" id="addArticle" class="btn btn-primary w-100 h-100">Add</button>
						</div>
						<span id="ArticlesValidationMessage" class="text-danger"></span>
					</div>
				}
			}
			<div class="form-group">
				<span asp-validation-for="ListArticlesSelected" class="text-danger"></span>
			</div>
			<br />
			<div class="form-group">
				<input type="submit" value="Create" class="btn btn-primary w-100" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

<script>
	$(document).ready(function () {
		var fieldCount = 0;

		$('#addArticle').click(function () {
			fieldCount++;

			var articleSelectedValue = $('#ArticleSelected').find(":selected").val();
			var articleSelectedText = $('#ArticleSelected').find(":selected").text();
			var articleQteSelectedValue = document.getElementById('ArticleQteSelected').value;

			if(articleSelectedValue && articleQteSelectedValue && articleQteSelectedValue > 0)
			{
				$.ajax({
					url: '/Order/CreateArticle', // L'URL de l'action du contrôleur qui va recevoir la valeur
					type: 'POST',
					data: {
						articleSelected: {
							Id: articleSelectedValue,
							Name: articleSelectedText,
							Qte: articleQteSelectedValue
						}
					},
					success: function (response) {
						$('#ListArticlesSelectedView').html(response);
					},
					error: function () {
						console.log("Erreur lors de la mise à jour de l'article");
					}
				});

				document.getElementById("ArticlesValidationMessage").textContent = "";
				document.getElementById("idTotalAmount").value = parseInt(document.getElementById("idTotalAmount").value) + parseInt(articleQteSelectedValue);
			}
			else
			{
				document.getElementById("ArticlesValidationMessage").textContent = "An article and quantity greater than 0 is required.";
			}
		});
	});
</script>